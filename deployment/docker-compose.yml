services:
  # Backend Service (FastAPI)
  backend:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.backend
    container_name: beaconai-backend
    ports:
      - "8000:8000"
    environment:
      # Environment variables for the backend
      - HF_TOKEN=${HF_TOKEN:-hf_your_hugging_face_token_here}
      - LLM_PROVIDER=${LLM_PROVIDER:-auto}
      - LLM_MODEL=${LLM_MODEL:-mistralai/Mistral-7B-Instruct-v0.3}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY:-SG.your_sendgrid_api_key_here}
      - SENDER_EMAIL=${SENDER_EMAIL:-insights@beaconai.com}
      - DOCKER_ENV=true
    volumes:
      # Mount generated_reports directory to persist PDF files
      - ../generated_reports:/app/generated_reports
      # Mount assets directory for logos/images
      - ../reporting/assets:/app/reporting/assets
    networks:
      - beaconai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service (Streamlit)
  frontend:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.frontend
    container_name: beaconai-frontend
    ports:
      - "8501:8501"
    environment:
      # Backend URL for frontend to connect to backend service
      - BACKEND_URL=http://backend:8000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - beaconai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Define custom network
networks:
  beaconai-network:
    driver: bridge

# Define volumes for data persistence
volumes:
  generated_reports:
    driver: local